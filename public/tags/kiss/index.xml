<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Kiss on Cello&#39;s Blog</title>
        <link>http://localhost:1313/tags/kiss/</link>
        <description>Recent content in Kiss on Cello&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Mon, 15 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/kiss/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Beyond the Dogma: An unpopular opinion on Clean Code</title>
        <link>http://localhost:1313/post/beyond-the-dogma-an-unpopular-opinion-on-clean-code/</link>
        <pubDate>Mon, 15 Jul 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/post/beyond-the-dogma-an-unpopular-opinion-on-clean-code/</guid>
        <description>&lt;img src="http://localhost:1313/post/beyond-the-dogma-an-unpopular-opinion-on-clean-code/cover.jpg" alt="Featured image of post Beyond the Dogma: An unpopular opinion on Clean Code" /&gt;&lt;h2 id=&#34;an-uplifting-read&#34;&gt;An uplifting read
&lt;/h2&gt;&lt;p&gt;Part of being a good developer is reading books and pursuing lifelong learning. One of the books that greatly influenced me as a young professional was &lt;a class=&#34;link&#34; href=&#34;https://amzn.to/3XZ8j3J&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;“Clean Code” by Robert C. Martin&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The best part? It’s an uplifting read. Even with limited software knowledge, you can easily grasp Martin’s concepts. I remember sitting on the train, reading with a smile on my face, and nodding in agreement throughout.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Martin is spot on! “Clean Code” is the real deal!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;the-hardliner&#34;&gt;The Hardliner
&lt;/h2&gt;&lt;p&gt;That’s when my “Clean Code” phase began. I treated all of Martin’s principles as established facts; a guidebook that all good developers must adhere to. I became rather dogmatic, sometimes blindly applying Martin’s suggestions.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;DRY&lt;/code&gt; (Don’t Repeat Yourself) — one of the key tenets of Clean Code. I internalized Martin’s ideas and shared them with my colleagues like a prophet. If I noticed something duplicated three times, I’d get nervous and immediately address it through extraction.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Extract ’til you drop!” — Martin’s mantra.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;coming-of-age&#34;&gt;Coming of Age
&lt;/h2&gt;&lt;p&gt;Becoming a Senior Developer required me to question Martin’s principles. Don’t get me wrong, Martin is still correct and “Clean Code” remains essential. However, blindly adopting all his rules is a mistake. Ponder them; some rules even contradict each other. &lt;code&gt;DRY&lt;/code&gt; can lead to complex architectures that breach the &lt;code&gt;KISS&lt;/code&gt; (Keep It Simple, Stupid!) principle. It can also lead to disregarding &lt;code&gt;YAGNI&lt;/code&gt; (You Ain’t Gonna Need It).&lt;/p&gt;
&lt;p&gt;I’ve come to realize that 6 lines of duplicated code are often cleaner than, for instance, implementing an observer pattern. With those 6 lines, I can instantly understand the code, without having to navigate through multiple classes and interfaces. If those 6 lines turn into 7 lines in 5 years, so be it. It’s an acceptable growth.&lt;/p&gt;
&lt;p&gt;If you find yourself with 12 lines of duplicated code growing every month, it’s a sign that refactoring should be scheduled.&lt;/p&gt;
&lt;h2 id=&#34;some-advice&#34;&gt;Some Advice
&lt;/h2&gt;&lt;p&gt;I believe every dedicated developer experiences a dogmatic Clean Code phase, so I won’t advise you to skip it. But keep it brief by critically evaluating Martin’s rules and adopting them only when they truly fit!&lt;/p&gt;
&lt;p&gt;Another rule I always remember:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The developer who has to debug your code is a serial killer who knows where you live!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Will you offer them 6 lines of code adding items to a list, or will you guide him through the Visitor Pattern to gather those 6 items?&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
